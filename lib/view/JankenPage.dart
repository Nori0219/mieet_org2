import 'dart:math';

import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:flutter_attimuitehoi_app/model/imagePage.dart';
import 'package:flutter_attimuitehoi_app/view/MyHoiPage.dart';
import 'package:flutter_attimuitehoi_app/view/YourHoiPage.dart';

class JankenPage extends StatefulWidget {
  const JankenPage({Key? key}) : super(key: key);

  @override
  State<JankenPage> createState() => _JankenPageState();
}

class _JankenPageState extends State<JankenPage> {
//StatefulWidget„ÅØÂ§âÊï∞„ÇíÊâ±„Åà„Çã
//Â§âÊï∞„ÅØ@override„Çà„Çä„ÇÇ‰∏ä„Å´Êõ∏„Åè
//„Éõ„ÉÉ„Éà„É™„É≠„Éº„Éâ„ÅÆÂØæË±°Â§ñ„Åß„ÅÇ„Çã„ÅÆ„ÅßÂè≥‰∏ä„ÅÆ„É™„É≠„Éº„Éâ„Éú„Çø„É≥„ÇíÊäº„Åô
String computerHand = 'üëê';
String myHand = '‚úã';
String FirstResult ='Âºï„ÅçÂàÜ„Åë';
String JankenVoice = 'ÊúÄÂàù„ÅØ„Ç∞„Éº„Åò„ÇÉ„Çì„Åë„Çì';


//ÊñáÂ≠óÂàó„ÅÆÂ§âÊï∞„ÅØString„Å®„ÅÑ„ÅÜÂûã„ÅßÂÆöÁæ©„Åô„Çã„ÄÄÊúÄÂàù„ÅØÂ∞èÊñáÂ≠ó„ÅßÊ¨°„ÅØÂ§ßÊñáÂ≠ó

//Èñ¢Êï∞„ÅÆÂÆöÁæ©
void selectHnd(String selectHnd) {
  myHand =selectHnd;
  //print(selectHnd);
  generateComputerHand();
  judge();
  next();
  setState(() {});
}


void generateComputerHand() {
  final randomNumber = Random().nextInt(3);
  computerHand = randomNumberToHand(randomNumber);
  print(randomNumberToHand(randomNumber));
}

String randomNumberToHand(int randomNumber) {
  switch (randomNumber) {
    case 0:
      return '‚úä';
    case 1:
      return '‚úå';
    case 2:
      return '‚úã';
    default:
      return '‚úä';
  }
  
}


//  void judge() {
//    if (computerHand == myHand) {
//      FirstResult ='Âºï„ÅçÂàÜ„Åë';
//    } else if ( myHand == '‚úä' && computerHand == '‚úå') {
//        FirstResult = 'Âãù„Å°';
//    } else if ( myHand == '‚úå' && computerHand == '‚úã') {
//        FirstResult = 'Âãù„Å°';
//    } else if ( myHand == '‚úã' && computerHand == '‚úä') {
//        FirstResult = 'Âãù„Å°';
//    }
//  }
 void judge() {
   if (computerHand == myHand) {
     FirstResult ='Âºï„ÅçÂàÜ„Åë';
   } else if ( myHand == '‚úä' && computerHand == '‚úå'||
       myHand == '‚úå' && computerHand == '‚úã'||
       myHand == '‚úã' && computerHand == '‚úä') {
       FirstResult = 'Âãù„Å°';
   }else {
    FirstResult = 'Ë≤†„Åë';
   }
 }

  void next(){
    if (FirstResult == 'Âãù„Å°') {
      Future.delayed(Duration(seconds: 2), () {
      Navigator.push(context, MaterialPageRoute(builder:(context)  => MyHoiPage()));
      });
      
    } else if (FirstResult == 'Ë≤†„Åë'){
      Future.delayed(Duration(seconds: 2), () {
      Navigator.push(context, MaterialPageRoute(builder:(context)  => YourHoiPage()));
    });
      
    }else { 
      JankenVoice = 'ÂãùË≤†„Åß';
    }
  }

Text JankenVoiceText() { // Text„Ç¶„Ç£„Ç∏„Çß„ÉÉ„Éà„ÇíËøî„ÅôÈñ¢Êï∞
  if (FirstResult == 'Âºï„ÅçÂàÜ„Åë') {
    return Text(JankenVoice,style: TextStyle(fontSize: 42,),);
  } else {
    return Text('„Éù„É≥ÔºÅ',style: TextStyle(fontSize: 42,),);
  }
}

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // appBar: AppBar(
      //   title: Text('„Åò„ÇÉ„Çì„Åë„Çì'),
      // ),
      body: SafeArea(
        child: Stack(
          children: <Widget>[
          Center(
            child: SingleChildScrollView(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.start,//Á∏¶„ÅÆcener„Å´Á∏¶‰∏¶„Å≥
                children: [
                  JankenVoiceText(),
                  // ReadyState == 0 ?//ÂàùÊúüÂÄ§„Åã„Çâ‰ª£„Çè„Çã„Å®ÊñáÂ≠ó„Åå‰ª£„Çè„Çã
                  // Text(ready,style: TextStyle(fontSize: 40,),):Text('„Éù„É≥ÔºÅ',style: TextStyle(fontSize: 60,),),
                    SizedBox(
                      height: 40
                      ,
                    ),
                    Container( //‰∫∫„ÅÆ„Ç§„É©„Çπ„Éà
                    height: 200,
                    child: People
                    ),
                    SizedBox(
                      height: 30
                      ,
                    ),
                  Text(
                    computerHand,//Áõ∏Êâã„ÅÆÊâã
                    style: TextStyle(
                      fontSize: 70,
                    ),
                    ),
                    Container(
                      height: 100,
                      child:Row(
                        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                       children: <Widget>[
                        Container(
                            color: Colors.black,
                            height: 7,
                            width: 140,
                          ),
                        const Text('VS',
                        style: TextStyle(
                          fontSize: 40,
                          fontWeight: FontWeight.bold
                        ),
                        textDirection: TextDirection.ltr,),
                        Container(
                          color: Colors.black,
                          height: 7,
                          width: 140,
                        )
                        ],
                      )
                    ),
                  Text(
                    myHand,
                    style: TextStyle(
                      fontSize: 80,
                    ),
                    ),
                    Container(
                      height: 50,//colum„Å®Raw„ÅÆÈñì„Å´ÈöôÈñì„ÇíÂèñ„Çã
                  
                    ),
                  Container(
                    decoration: BoxDecoration(
                      color: Colors.blue[100],
                      border: Border.all(color: Color.fromARGB(255, 32, 169, 211),width: 6),
                      borderRadius: BorderRadius.circular(40),
                    ),
                    width: 350, height: 170,
                    child: Column(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        const Text('Âá∫„ÅôÊâã„ÇíÈÅ∏„Çì„ÅßÔºÅ',style: TextStyle(fontSize: 30,fontWeight: FontWeight.bold)),
                        // SizedBox(
                        //   height: 20,
                        // ),
                        Row(//Ê®™‰∏¶„Å≥
                          mainAxisAlignment: MainAxisAlignment.spaceEvenly,//Á≠âÈñìÈöî„Å´‰∏≠Â§ÆÊèÉ„Åà
                          children: [
                            ElevatedButton(
                              onPressed: (){
                                selectHnd('‚úä');
                                // myHand ='‚úä';//Â§âÊï∞„Å´‰ª£ÂÖ•
                                // print('‚úä');
                                // setState(() {});//ÁîªÈù¢‰∏ä„ÅßÂ§âÊï∞„ÅÆÂ§âÊõ¥„ÇíË°®Á§∫„Åï„Åõ„Çã
                              },
                              style: ElevatedButton.styleFrom(minimumSize: Size(70, 70),primary: Colors.white,elevation: 5,),
                              
                              child: Text('‚úä',style: TextStyle(fontSize: 30),),
                            ),
                            ElevatedButton(
                              onPressed: (){
                                selectHnd('‚úå');
                                // myHand ='‚úå';
                                // print('‚úå');
                                // setState(() {});
                              },
                              style: ElevatedButton.styleFrom(minimumSize: Size(70, 70),primary: Colors.white,elevation: 5,),
                              child: Text('‚úå',style: TextStyle(fontSize: 30),),
                            ),
                            ElevatedButton(
                              onPressed: (){
                                selectHnd('‚úã');
                                // myHand ='‚úã';
                                // print('‚úã');
                                // setState(() {});
                              },
                              style: ElevatedButton.styleFrom(minimumSize: Size(70, 70),primary: Colors.white,elevation: 5,),
                              child: Text('‚úã',style: TextStyle(fontSize: 30),),
                            ),
                          ],
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ),
        ]
        ),
      ),
    );
  }
}
